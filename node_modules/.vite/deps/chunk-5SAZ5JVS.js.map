{
  "version": 3,
  "sources": ["../../react-leaflet/lib/MapContainer.js"],
  "sourcesContent": ["function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n"],
  "mappings": ";;;;;;;;;;;;;AAeA,qBAAkC;AAClC,mBAAyF;AAhBzF,SAAS,WAAW;AAChB,aAAW,OAAO,UAAU,SAAS,QAAQ;AACzC,aAAQ,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAI;AACrC,UAAI,SAAS,UAAU,CAAC;AACxB,eAAQ,OAAO,QAAO;AAClB,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,GAAG;AACnD,iBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,SAAO,SAAS,MAAM,MAAM,SAAS;AACzC;AAIA,SAAS,sBAAsB,EAAE,QAAS,eAAgB,QAAS,UAAW,WAAY,IAAK,aAAc,OAAQ,WAAY,MAAO,GAAG,QAAQ,GAAG,cAAc;AAChK,QAAM,CAAC,KAAK,QAAI,uBAAS;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC;AACD,QAAM,CAAC,SAAS,UAAU,QAAI,uBAAS,IAAI;AAC3C,wCAAoB,cAAc,OAAI,mCAAS,QAAO,MAAM;AAAA,IACxD;AAAA,EACJ,CAAC;AACD,QAAM,aAAS,0BAAY,CAAC,SAAO;AAC/B,QAAI,SAAS,QAAQ,YAAY,MAAM;AACnC,YAAM,MAAM,IAAI,eAAAA,IAAW,MAAM,OAAO;AACxC,UAAI,UAAU,QAAQ,QAAQ,MAAM;AAChC,YAAI,QAAQ,QAAQ,IAAI;AAAA,MAC5B,WAAW,UAAU,MAAM;AACvB,YAAI,UAAU,QAAQ,aAAa;AAAA,MACvC;AACA,UAAI,aAAa,MAAM;AACnB,YAAI,UAAU,SAAS;AAAA,MAC3B;AACA,iBAAW,qBAAqB,GAAG,CAAC;AAAA,IACxC;AAAA,EAEJ,GAAG,CAAC,CAAC;AACL,8BAAU,MAAI;AACV,WAAO,MAAI;AACP,yCAAS,IAAI;AAAA,IACjB;AAAA,EACJ,GAAG;AAAA,IACC;AAAA,EACJ,CAAC;AACD,QAAM,WAAW,UAAwB,aAAAC,QAAM,cAAc,iBAAiB;AAAA,IAC1E,OAAO;AAAA,EACX,GAAG,QAAQ,IAAI,eAAe;AAC9B,SAAqB,aAAAA,QAAM,cAAc,OAAO,SAAS,CAAC,GAAG,OAAO;AAAA,IAChE,KAAK;AAAA,EACT,CAAC,GAAG,QAAQ;AAChB;AACO,IAAM,mBAA6B,yBAAW,qBAAqB;",
  "names": ["LeafletMap", "React"]
}
